{"version":3,"file":"index.js","sources":["../src/js/11-module.js"],"sourcesContent":["// 1 - додаєм та використовуєм бібліотеку https://axios-http.com/\n// Робимо рефакторинг\n// - імпорт \n// - запит\n// - метод axios.get \n// - обробка відповіді та помилки \n\nimport axios from \"axios\";\n\n// const url = \"https://jsonplaceholder.typicode.com/todos\";\n\n// const list = document.querySelector(\".todo-list\");\n\n// a) звичайний спобіб з фетч \n\n// fetch(url) \n// .then(res => {\n//     if(!res.ok) {\n//         throw new Error(\"Oops\");\n//     }\n//     return res.json;\n// })\n// .then(data => {\n//     console.log(data);\n//     list.insertAdjacentHTML(\"beforeend\", createMarkup(data));\n// })\n// .catch(error => {\n//     console.log(error);\n// })\n\n// function createMarkup(arr) {\n//     arr.map(({ title, completed}) => `\n//     <li class=\"list-item\">\n//     <input type=\"checkbox\" ${completed && \"checked\"}/>\n//     <p>${title}</p>\n//     </li>\n//     `).join(\"\");\n// }\n\n// b) cпосіб з аксіос \n\n// axios(\"https://jsonplaceholder.typicode.com/todos1\")\n// .then((res) => {\n//     console.log(res.data);\n//     list.insertAdjacentHTML(\"beforeend\", createMarkup(res.data));\n// })\n// .catch(error => {\n//     console.log(error.message);\n// })\n\n// c) спосіб з аксіос і явним викликом \n\n// axios.get(\"https://jsonplaceholder.typicode.com/todos1\")\n//  .then((res) => {\n//         console.log(res.data);\n//         list.insertAdjacentHTML(\"beforeend\", createMarkup(res.data));\n//     })\n//     .catch(error => {\n//         console.log(error.message);\n//     })\n\n// 2 - всередині функції запит, зовні обробка \n// (як ми можемо викор аксіос в функцяя для подальшого перевикористання)\n\n\n// const fetchData = (endpoint = \"todos\") => {\n// return axios(`https://jsonplaceholder.typicode.com/${endpoint}`);\n\n\n// }\n\n// fetchData(\"todos\")\n// .then(res => {\n//     console.log(res);\n// })\n// .catch(error => {\n//     console.log(error.message);\n// })\n// fetchData(\"users\")\n// .then(res => {\n//     console.log(res.data);\n// })\n// .catch(error => {\n//     console.log(error);\n// })\n\n// 2 -  робимо рефакторинг авторизації запитів з ключами \n// - як у axios передавати search params та headers \n\n// Для прикладу використовуємо https://pixabay.com/api/docs/ \n\nconst API_KEY = \"51359701-f6006c27d1fc3647654901390\";\n// const params = new URLSearchParams({\n// key: API_KEY,\n// q: \"cat\"\n// })\nconst list = document.querySelector(\".list\");\n\naxios('https://pixabay.com/api/', {\nparams: {\nkey: API_KEY,\nq: \"cat\"\n}\n})\n.then(res => {\n    console.log(res);\n    list.insertAdjacentHTML(\"beforeend\", createMarkup(res.data.hits));\n})\n.catch(error => {\n    console.log(error);\n})\n\nfunction createMarkup(arr) {\n    arr.map(({previewURL, tags}) => `\n    <li>\n    <img src=\"${previewURL}\" alt=\"${tags}\" width=\"300\" />\n    </li>\n\n    `).join(\"\");\n}"],"names":["API_KEY","list","axios","res","createMarkup","error","arr","previewURL","tags"],"mappings":"wIA2FA,MAAMA,EAAU,qCAKVC,EAAO,SAAS,cAAc,OAAO,EAE3CC,EAAM,2BAA4B,CAClC,OAAQ,CACR,IAAKF,EACL,EAAG,KACH,CACA,CAAC,EACA,KAAKG,GAAO,CACT,QAAQ,IAAIA,CAAG,EACfF,EAAK,mBAAmB,YAAaG,EAAaD,EAAI,KAAK,IAAI,CAAC,CACpE,CAAC,EACA,MAAME,GAAS,CACZ,QAAQ,IAAIA,CAAK,CACrB,CAAC,EAED,SAASD,EAAaE,EAAK,CACvBA,EAAI,IAAI,CAAC,CAAC,WAAAC,EAAY,KAAAC,CAAI,IAAM;AAAA;AAAA,gBAEpBD,CAAU,UAAUC,CAAI;AAAA;AAAA;AAAA,KAGnC,EAAE,KAAK,EAAE,CACd"}